external Intec_ZeroRated {

    ascii incomingSwitch         : align(left), padded_with(0x20), static_size(20);
    ascii outgoingSwitch         : align(left), padded_with(0x20), static_size(20);
    ascii eventStartDate         : align(left), padded_with(0x20), static_size(8);
    ascii eventStartTime         : align(left), padded_with(0x20), static_size(8);
    ascii eventDuration          : align(right), padded_with("0"), static_size(10);
    ascii aNum                   : align(left), padded_with(0x20), static_size(28); //, int(base10);
    ascii bNum                   : align(left), padded_with(0x20), static_size(28); //, int(base10);
    ascii incomingTrunk          : align(left), padded_with(0x20), static_size(20);
    ascii outgoingTrunk          : align(left), padded_with(0x20), static_size(20);
    ascii incomingProduct        : align(left), padded_with(0x20), static_size(14); 
    ascii outgoingProduct        : align(left), padded_with(0x20), static_size(14);
    ascii eventDirection         : align(left), padded_with(0x20), static_size(1);
    ascii discreteRatingParam_1  : align(left), padded_with(0x20), static_size(15); 
    ascii dataUnit               : align(left), padded_with(0x20), static_size(8);
    ascii recSeqNum              : long(base10), align(left), padded_with(0x20), static_size(40);
    ascii recType                : align(left), padded_with(0x20), static_size(2); 
    ascii userSummarization      : align(left), padded_with(0x20), static_size(20);
    ascii userData               : align(left), padded_with(0x20), static_size(30);
    ascii userData_2             : align(left), padded_with(0x20), static_size(30);
    ascii linkField              : align(left), padded_with(0x20), static_size(2);// Added new field for Idenfication of splited record @Build 5    
    ascii userData_3             : align(left), padded_with(0x20), static_size(80); 
    ascii lineFeed               : terminated_by(0xA), external_only;
};


in_map contentZeroRated_inmap : external(Intec_ZeroRated), target_internal(Intec_ZeroRated_TI){automatic;};

decoder inContentFormatZeroRated_Dec : in_map(contentZeroRated_inmap);

out_map contentZeroRated_OutMap : internal(Intec_ZeroRated_TI),external(Intec_ZeroRated) { 
    automatic;
};

encoder contentZeroRated_Enc : out_map(contentZeroRated_OutMap);
