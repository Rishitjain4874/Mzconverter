external CtasIpsm : terminated_by(0xA){    
    set {
        errorBlockCtasIpsm errIpsm : optional;  
    };
    ascii seqNum                           : terminated_by(0x2C);
    ascii timeStampSubmit                  : terminated_by(0x2C);
    ascii timeStampDelivery                : terminated_by(0x2C);
    ascii cdrType                          : terminated_by(0x2C);
    ascii reqType                          : terminated_by(0x2C);
    ascii msgSegType                       : terminated_by(0x2C);
    ascii msgIdentifier                    : terminated_by(0x2C);
    ascii ANumber                          : terminated_by(0x2C);
    ascii BNumber                          : terminated_by(0x2C);
    ascii pVisitedNetworkId                : terminated_by(0x2C);
    ascii correlationId                    : terminated_by(0x2C);
    ascii protocolId                       : terminated_by(0x2C);
    ascii imsChargingId                    : terminated_by(0x2C);
    ascii sessionId                        : terminated_by(0x2C);
    ascii msgForwardInd                    : terminated_by(0x2C);
    ascii numOfAttempts                    : terminated_by(0x2C);
    ascii respFromMnpDip                   : terminated_by(0x2C);
    ascii diaResultCode                    : terminated_by(0x2C);
    ascii pAccessNetworkInfo               : terminated_by(0x2C);
    ascii roamGT                           : terminated_by(0x2C);
    ascii valPeriodOfSms                   : terminated_by(0x2C);
    ascii lrn                              : terminated_by(0x2C);
    ascii imei                             : terminated_by(0x2C);
    ascii callId                           : terminated_by(0x2C);
    ascii sriResponse                      : terminated_by(0x2C);
    ascii deliveryResponse                 : terminated_by(0x2C);
    ascii mtResponse                       : terminated_by(0x2C);
    ascii submitSmResponse                 : terminated_by(0x2C);
    ascii spamFound                        : terminated_by(0x2C);
    ascii spamType                         : terminated_by(0x2C);
    ascii currentPartial                   : terminated_by(0x2C);
    ascii totalPartial                     : terminated_by(0x2C);
    ascii homeGT                           : terminated_by(0x2C);
    ascii smscAddress                      : terminated_by(0x2C);
    ascii OriginatingImsi                  : terminated_by(0x2C);
    ascii deliveryStatus                   : terminated_by(0x2C);
    ascii sourceAccountId                  : terminated_by(0x2C);
    ascii errorCode                        : terminated_by(0x2C);
    ascii LengthSms                        : terminated_by(0x2C);
    ascii DestiAccId                       : terminated_by(0x2C);
    ascii VVMSC                            : terminated_by(0x2C);
    ascii CommandId                        : terminated_by(0x2C);
    ascii Reserved3                        : terminated_by(0x2C);
    ascii Reserved4                        : terminated_by(0x2C);
    ascii Reserved5                        : terminated_by(0x2C);
    ascii Reserved6                        : terminated_by(0x2C);
    ascii Reserved7                        : terminated_by(0x2C);
    ascii Reserved8                        : terminated_by(0x2C);
    ascii Reserved9                        : terminated_by(0x2C);
    ascii Reserved10                       : terminated_by(0x2C);
    ascii Reserved11                       : terminated_by(0xA);
};

in_map errorBlockCtasIpsm_InMap : external (errorBlockCtasIpsm), target_internal(errorBlockCtasIpsm){automatic;};

in_map CtasIpsm_InMap : external (CtasIpsm), target_internal(CtasIpsmTI){
   automatic {
        errorBlockCtasIpsm : using in_map Error_Map;
    };
};
out_map CtasIpsm_OutMap : external (CtasIpsm), internal(CtasIpsmTI){automatic;};
encoder CtasIpsm_Enc : out_map(CtasIpsm_OutMap);
decoder  Ctasv20 : in_map(CtasIpsm_InMap);
//IPSM cdr decoder ends

external errorBlockCtasIpsm : identified_by(strStartsWith(errorCode, "DRP")|| strStartsWith(errorCode, "ERR")) {
    ascii errorCode          : terminated_by(",");
    ascii errorMessage       : terminated_by(",");
};

in_map Error_Map : external(errorBlockCtasIpsm),target_internal(errorBlock) {
    automatic;
};

internal CtasInternal{
    string sANum;
    string sBNum;
    string sNormalizedCallingNumber;
    string sNormalizedCalledNumber;
    string sSubmitTime;
    string sPvni;
    string sImsCID;
    string sSessionID;
    string sPani;
    string sRoamGT;
    string sLrn;
    string sImei;
    string sCurrentPartial;
    string sHomeGT;
    string sImsi;
    string sCircle;
    string sDeliveryStatus;
    string sRsnCode;
    string sCdrType;
    string sRecSeqNumber;
    string numberOfAttempts;
    string sSMSType;
    boolean isVoWifi;
    boolean isVolte;   
    CtasIpsmTI origRec;
};


external CSVExternal
{
    ascii TimeStampSubmit    : terminated_by(",");
    ascii Anumber            : terminated_by(",");
    ascii Bnumber            : terminated_by(",");
    ascii PVisitedNetworkID  : terminated_by(",");
    ascii ImsChargingID      : terminated_by(",");
    ascii SessionID          : terminated_by(",");
    ascii PAccessNetworkInfo : terminated_by(",");
    ascii RoamGT             : terminated_by(",");
    ascii Lrn                : terminated_by(",");
    ascii Imei               : terminated_by(",");
    ascii CurrentPartial     : terminated_by(",");
    ascii HomeGT             : terminated_by(",");
    ascii OriginatingImsi    : terminated_by(",");
    ascii DeliveryStatus     : terminated_by(",");
    ascii CdrType            : terminated_by(",");
    ascii RecordSeqNum       : terminated_by(",");
    ascii RequestType        : terminated_by(",");
    ascii Circle             : terminated_by(0xA);   
};

in_map csv_im : external (CSVExternal) , target_internal(CSV_TI){
	automatic;
};

out_map csv_om : external (CSVExternal) , internal(CSV_TI){
	automatic;
};

decoder CSV_Decoder : in_map (csv_im);

encoder CSV_Encoder : out_map(csv_om);
