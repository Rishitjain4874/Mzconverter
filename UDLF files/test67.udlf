external ext_pgw_csv {
  ascii recordType : terminated_by(",");                   
  ascii servedIMSI : terminated_by(",");                    
  ascii p_GWAddress : terminated_by(",");                  
  ascii chargingID  : terminated_by(",");                   
  ascii servingNodeAddress  : terminated_by(",");           
  ascii accessPointNameNI  : terminated_by(",");            
  ascii pdpPDNType  : terminated_by(",");                   
  ascii servedPDPPDNAddress  : terminated_by(",");          
  ascii dynamicAddressFlag  : terminated_by(",");           
  ascii recordOpeningTime  : terminated_by(",");            
  ascii duration  : terminated_by(",");                     
  ascii causeForRecClosing  : terminated_by(",");           
  ascii diagnostics : terminated_by(",");                   
  ascii recordSequenceNumber  : terminated_by(",");         
  ascii nodeID  : terminated_by(",");                       
  ascii recordExtensions  : terminated_by(",");             
  ascii localSequenceNumber  : terminated_by(","); 
  ascii apnSelectionMode  : terminated_by(",");             
  ascii servedMSISDN : terminated_by(",");                  
  ascii chargingCharacteristics  : terminated_by(",");      
  ascii chChSelectionMode  : terminated_by(",");            
  ascii iMSsignalingContext : terminated_by(",");           
  ascii externalChargingID  : terminated_by(",");           
  ascii servinggNodePLMNIdentifier  : terminated_by(",");   
  ascii pSFurnishChargingInformation  : terminated_by(","); 
  ascii servedIMEISV  : terminated_by(",");                 
  ascii rATType  : terminated_by(",");                      
  ascii mSTimeZone  : terminated_by(",");                   
  ascii userLocationInformation  : terminated_by(",");
  ascii eCGIMccMnc  : terminated_by(",");
  ascii eCI  : terminated_by(",");
  ascii tAIMccMnc  : terminated_by(",");
  ascii tAc  : terminated_by(",");  
  ascii cAMELChargingInformation  : terminated_by(",");     
  ascii listOfServiceData  : terminated_by(",");            
  ascii servingNodeType  : terminated_by(",");              
  ascii servedMNNAI  : terminated_by(",");                  
  ascii p_GWPLMNIdentifier  : terminated_by(",");           
  ascii startTime  : terminated_by(",");                    
  ascii stopTime  : terminated_by(",");                     
  ascii served3gpp2MEID  : terminated_by(",");              
  ascii pDNConnectionID  : terminated_by(",");              
  ascii iMSIunauthenticatedFlag  : terminated_by(",");      
  ascii userCSGInformation  : terminated_by(",");           
  ascii GPP2UserLocationInformation  : terminated_by (",");
  ascii volumeDownLink  :  terminated_by(",");
  ascii volumeUpLink : terminated_by(",");
  ascii qoSNegGuarrentedBitRateDL : terminated_by(",");
  ascii qoSNegGuarrantedBitRateUL : terminated_by(",");
  ascii qCI : terminated_by(",");
  ascii aRP : terminated_by(",");
  ascii ratingGroup : terminated_by(0x0a); 
};

/*
internal int_pgw_csv {
  string     recordType;                  
  string     servedIMSI;                  
  string     p_GWAddress;                 
  string     chargingID;                  
  string     servingNodeAddress;          
  string     accessPointNameNI;           
  string     pdpPDNType;                  
  string     servedPDPPDNAddress;         
  string     dynamicAddressFlag;          
  string     recordOpeningTime;           
  string     duration;                    
  string     causeForRecClosing;          
  string     diagnostics;                 
  string     recordSequenceNumber;        
  string     nodeID;                      
  string     recordExtensions;            
  string     localSequenceNumber;  
  string     apnSelectionMode;            
  string     servedMSISDN;                
  string     chargingCharacteristics;     
  string     chChSelectionMode;           
  string     iMSsignalingContext;         
  string     externalChargingID;          
  string     servinggNodePLMNIdentifier;  
  string     pSFurnishChargingInformation;
  string     servedIMEISV;                
  string     rATType;                     
  string     mSTimeZone;                  
  string     userLocationInformation;  
  string     eCGIMccMnc;
  string     eCI;
  string     tAIMccMnc;
  string     tAc;     
  string     cAMELChargingInformation;    
  string     listOfServiceData;           
  string     servingNodeType;             
  string     servedMNNAI;                 
  string     p_GWPLMNIdentifier;          
  string     startTime;                   
  string     stopTime;                    
  string     served3gpp2MEID;             
  string     pDNConnectionID;             
  string     iMSIunauthenticatedFlag;     
  string     userCSGInformation;          
  string     GPP2UserLocationInformation;
  string     aRP;
  string     ratingGroup;       
};
*/

external pgw_rpt_ext : identified_by(fileID==3), terminated_by(0xA) {
    ascii fileID : terminated_by(","), int(base10), external_only, encode_value(3);
    ascii recordTime : terminated_by(",");
    ascii duration : int(base10), terminated_by(","); // duration until it need to give other record
    ascii ipAddress : terminated_by(",");
    ascii imsi : terminated_by(",");
    ascii imei : terminated_by(",");
    ascii msisdn : terminated_by(0xA);
};

internal pgw_rpt_int {
    long startTimeMS; // counted from first found recordTime
    date startTimeDt;
    long endTimeMS; // counted from last seen record time + duration
    date endTimeDt;
    long recordTimeMS;
    date recordTimeDt;
};

external pgw_ipsec_Head_Ext{
  ascii servedPDPPDNAddress : encode_value("servedPDPPDNAddress"), terminated_by(",");
  ascii servedIMSI          : encode_value("servedIMSI"), terminated_by(",");
  ascii servedMSISDN        : encode_value("servedMSISDN"), terminated_by(",");
  ascii recordOpeningTime   : encode_value("recordOpeningTime"), terminated_by(",");
  ascii p_GWAddress         : encode_value("p_GWAddress"), terminated_by(",");
  ascii IMEI                : encode_value("IMEI"), terminated_by(",");
  ascii firstCellID         : encode_value("FirstCellID"), terminated_by(",");
  ascii sessionEndDateTime  : encode_value("SessionEndDateTime"), terminated_by(",");
  ascii duration            : encode_value("Duration"), terminated_by(",");
  ascii dataVolumeUplink    : encode_value("DataVolumeUplink"), terminated_by(",");
  ascii dataVolumeDownlink  : encode_value("DataVolumeDownlink"), terminated_by(",");
  ascii chargingID          : encode_value("ChargingID"), terminated_by(",");
  ascii accessPointName     : encode_value("AccessPointName"), terminated_by(",");
  ascii CGI_ID              : encode_value("CGI_ID"), terminated_by(",");
  ascii ratingGroup         : encode_value("ratingGroup"), terminated_by(",");
  ascii aFchargingIdentifier: encode_value("aFchargingIdentifier"), terminated_by(0xA); //new feild added on 20160810
};

//external for log file format 
//08Aug16  Shrinitee.S   Added aFchargingIdentifer for MRO
external ext_pgw_log {
  ascii servedPDPPDNAddress  : terminated_by(",");
  ascii servedIMSI : terminated_by(","); 
  ascii servedMSISDN : terminated_by(",");            
  ascii recordOpeningTime  : terminated_by(",");
  //ascii p_GWAddress : terminated_by(0x0a); 
  ascii p_GWAddress : terminated_by(","); 
  //Following fields are added as part of BWA(LTE-TDD) Service Testing
  ascii IMEI : terminated_by(",");
  ascii firstCellID : terminated_by(",");
  ascii sessionEndDateTime : terminated_by(",");
  ascii duration : terminated_by(",");
  ascii dataVolumeUplink : terminated_by(",");
  ascii dataVolumeDownlink : terminated_by(",");
  ascii chargingID : terminated_by(",");
  ascii accessPointName : terminated_by(",");
  ascii CGI_ID: terminated_by(",");
  ascii ratingGroup: terminated_by(",");
  ascii aFchargingIdentifier : terminated_by(0xA); //new feild added on 20160810
};


// input file
in_map in_map_pgw_csv : external(ext_pgw_csv), target_internal(int_pgw_csv) {automatic;};
out_map out_map_pgw_csv : external(ext_pgw_csv), internal (int_pgw_csv) { 
automatic; 
};

encoder enc_pgw_csv : out_map(out_map_pgw_csv);

//log file
in_map in_map_pgw_head_log : external(pgw_ipsec_Head_Ext), target_internal(pgw_ipsec_Head_Ext_TI) {automatic;};
in_map in_map_pgw_head_log_disc : external(pgw_ipsec_Head_Ext), target_internal(pgw_ipsec_Head_Ext_disc), discard_output {automatic;};
decoder dec_pgw_head_log_disc : in_map(in_map_pgw_head_log_disc);
out_map out_map_pgw_head_log : external(pgw_ipsec_Head_Ext), internal(pgw_ipsec_Head_Ext_TI) {automatic;};

in_map in_map_pgw_log : external(ext_pgw_log), target_internal(int_pgw_log) {automatic;};
decoder dec_pgw_content_log : in_map(in_map_pgw_log);

//in_map in_map_pgw_log : external(ext_pgw_log), target_internal(int_pgw_log) {automatic;};
out_map out_map_pgw_log : external(ext_pgw_log), internal(int_pgw_log) {automatic;};
encoder enc_pgw_log : out_map(out_map_pgw_head_log), out_map(out_map_pgw_log);


// 5may15  Shrinitee.S   Added decoder dec_pgw_log for MRO
decoder dec_pgw_log {
    decoder dec_pgw_head_log_disc;
    decoder dec_pgw_content_log*;
};
// report
in_map pgw_rpt_in_map : external(pgw_rpt_ext), internal(pgw_rpt_int), target_internal(pgw_rpt_ti) {automatic;};
decoder pgw_rpt_dec : in_map(pgw_rpt_in_map);
out_map pgw_rpt_out_map : external(pgw_rpt_ext), internal(pgw_rpt_ti) {automatic;};
encoder pgw_rpt_enc : out_map(pgw_rpt_out_map);


//20Oct2016 Shrinitee.S Added Header for BI
external pgw_BI_Head_Ext{
  ascii servedMSISDN        	: encode_value("servedMSISDN"), terminated_by(",");
  ascii servedIMSI          	: encode_value("servedIMSI"), terminated_by(",");
  ascii firstCell_ID        	: encode_value("First_cell_ID"), terminated_by(",");
  ascii CGI_ID              	: encode_value("CGI_ID"), terminated_by(",");
  ascii servedPDPPDNAddressIPv4 : encode_value("servedPDPPDNAddress IPv4"), terminated_by(",");
  ascii servedPDPPDNAddressIPv6 : encode_value("servedPDPPDNAddress IPv6"), terminated_by(",");
  ascii startDate               : encode_value("Start Date"), terminated_by(",");
  ascii startTime               : encode_value("Start Time"), terminated_by(",");
  ascii IMEI                    : encode_value("IMEI"), terminated_by(",");
  ascii p_GWAddress             : encode_value("PGW_Address"), terminated_by(",");
  ascii duration                : encode_value("Duration"), terminated_by(",");
  ascii chargingId              : encode_value("ChargingID"), terminated_by(",");
  ascii ratType                 : encode_value("raTType"), terminated_by(",");
  ascii apGroupName             : encode_value("AP_Group_Name"), terminated_by(",");
  ascii aPMACID                 : encode_value("AP_MACID"), terminated_by(",");
  ascii aPN                     : encode_value("APN"), terminated_by(",");
  ascii uEIP                    :encode_value("UeIP"), terminated_by(",");
  ascii uEPort                  :encode_value("UePort"), terminated_by(0xA);
};

in_map in_map_pgw_head_bi : external(pgw_BI_Head_Ext), target_internal(pgw_bi_Head_Ext_TI) {automatic;};
out_map out_map_pgw_head_bi : external(pgw_BI_Head_Ext), internal(pgw_bi_Head_Ext_TI) {automatic;};
decoder pgwBI_Head_Dec : in_map(in_map_pgw_head_bi);
encoder pgwBI_Head_Enc : out_map(out_map_pgw_head_bi);

external pgw_bi_rec{
    ascii servedMSISDN            : terminated_by(",");
    ascii servedIMSI              : terminated_by(",");
    ascii firstCell_ID            : terminated_by(",");
    ascii CGI_ID                  : terminated_by(",");
    ascii servedPDPPDNAddressIPv4 : terminated_by(",");
    ascii servedPDPPDNAddressIPv6 : terminated_by(",");
    ascii startDate               : terminated_by(",");
    ascii startTime               : terminated_by(",");
    ascii IMEI                    : terminated_by(",");
    ascii p_GWAddress             : terminated_by(",");
    ascii duration                : terminated_by(",");
    ascii chargingId              : terminated_by(",");
    ascii ratType                 : terminated_by(",");
    ascii apGroupName             : terminated_by(",");
    ascii aPMACID                 : terminated_by(",");
    ascii aPN                     : terminated_by(",");
    ascii uEIP                    : terminated_by(",");
    ascii uEPort                  : terminated_by(",");
    ascii dataVolumeUplink        : terminated_by(",");
    ascii dataVolumeDownlink      : terminated_by(",");
    ascii lastCell_ID             : terminated_by(",");
    ascii visitedMCCMNC           : terminated_by(",");
    ascii IPAddressSGW            : terminated_by(0xA);
};

in_map pgw_bi_rec_IM : external(pgw_bi_rec), target_internal(pgw_bi_rec_TI){
    automatic;
};

decoder pgwBIDec : in_map(pgw_bi_rec_IM);
out_map pgw_bi_rec_out_map : external(pgw_bi_rec), internal(pgw_bi_rec_TI){
    automatic;
    };
encoder pgwBIEnc : out_map(pgw_bi_rec_out_map),out_map(out_map_pgw_head_bi);

event eEmailEvent{
    string messageTo;
    string message;
    string subjectLine;
};