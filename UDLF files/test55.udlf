external TAS_ONL : terminated_by(0xA)
{
    ascii Recordtype  : terminated_by(",");
    ascii CallingNumber   : terminated_by(",");
    ascii CalledNumber  : terminated_by(",");
    ascii RequestedNumber  : terminated_by(",");
    ascii CallAssociatedNum : terminated_by(",");
    ascii pServedUser : terminated_by(",");
    ascii SessionId :   terminated_by(",");
    ascii MediaName  : terminated_by(",");
    ascii CallStartTime  : terminated_by(",");
    ascii CallEndTime  : terminated_by(",");
    ascii LRN  : terminated_by(",");
    ascii VisitedNetwork  : terminated_by(",");
    ascii AccessNetworkInfo : terminated_by(",");
    ascii CallDuration : terminated_by(",");
    ascii Circle  : terminated_by(",");
    ascii Imsi    : terminated_by(",");
    ascii ICID    : terminated_by(",");
    ascii IMEI    : terminated_by(","); 
    ascii recSeqNum : terminated_by(0xA);
    
};

in_map tas_im : external (TAS_ONL) , target_internal(TAS_ONL_TI){
	automatic;
};
out_map tas_om : external (TAS_ONL) , internal(TAS_ONL_TI){
	automatic;

};

decoder tas_Decoder : in_map (tas_im);

encoder tas_Encoder : out_map(tas_om);

external CSVHeader{
    ascii Recordtype        :encode_value("Recordtype"),terminated_by(",");
    ascii CallingNumber     :encode_value("CallingNumber"),terminated_by(",");
    ascii CalledNumber      :encode_value("CalledNumber"),terminated_by(",");
    ascii RequestedNumber   :encode_value("RequestedNumber"),terminated_by(",");
    ascii CallAssociatedNum :encode_value("CallAssociatedNum"),terminated_by(",");
    ascii pServerUser       :encode_value("pServerUser"),terminated_by(",");
    ascii SessionId         :encode_value("SessionId"),terminated_by(",");
    ascii MediaName         :encode_value("MediaName"),terminated_by(",");
    ascii CallStartTime     :encode_value("CallStartTime"),terminated_by(",");
    ascii CallEndTime       :encode_value("CallEndTime"),terminated_by(",");
    ascii LRN               :encode_value("LRN"),terminated_by(",");
    ascii VisitedNetwork    :encode_value("VisitedNetwork"),terminated_by(",");
    ascii AccessNetworkInfo :encode_value("AccessNetworkInfo"),terminated_by(",");
    ascii CallDuration      :encode_value("CallDuration"),terminated_by(",");
    ascii Circle            :encode_value("Circle"),terminated_by(",");
    ascii Imsi              :encode_value("Imsi"),terminated_by(",");
    ascii ICID              :encode_value("ICID"),terminated_by(",");
    ascii IMEI              :encode_value("IMEI"),terminated_by(",");
    ascii recSeqNum         :encode_value("recSeqNum"),terminated_by(0XA);
};

in_map header_in : external (CSVHeader) , target_internal(CsvHeader_TI),discard_output{
	automatic;
};

decoder header_Dec : in_map (header_in);


out_map header_out : external(CSVHeader),internal(CsvHeader_TI){
	automatic;
};

encoder header_enc : out_map(header_out);

decoder TAS_Rec
{
    decoder header_Dec;
    decoder tas_Decoder *;
};

internal TAS_UDR{
    string Filename;
    int TotRec;
    boolean DupRec;
    TAS_ONL_TI origRec;
};

session UDRsession{
    string sessionId;
    string recSeq;
    boolean isSessionInit;
};